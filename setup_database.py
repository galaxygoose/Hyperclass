import psycopg2
from psycopg2 import sql

def setup_database():
    """Set up PostgreSQL database and table for image classification data"""

    # Database connection parameters - update these for your setup
    db_params = {
        'host': 'localhost',
        'database': 'postgres',  # Connect to default postgres database first
        'user': 'postgres',  # Update with your PostgreSQL username
        'password': '',  # Try empty password first, then set if needed
        'port': 5433
    }

    try:
        # Connect to PostgreSQL
        conn = psycopg2.connect(**db_params)
        conn.autocommit = True
        cursor = conn.cursor()

        # Create database if it doesn't exist
        cursor.execute("SELECT 1 FROM pg_catalog.pg_database WHERE datname = 'image_classification'")
        exists = cursor.fetchone()
        if not exists:
            cursor.execute(sql.SQL("CREATE DATABASE {}").format(
                sql.Identifier('image_classification')
            ))
            print("Database 'image_classification' created successfully!")

        cursor.close()
        conn.close()

        # Connect to the specific database
        db_params['database'] = 'image_classification'
        conn = psycopg2.connect(**db_params)
        cursor = conn.cursor()

        # Create table for image metadata
        create_table_query = """
        CREATE TABLE IF NOT EXISTS image_metadata (
            id SERIAL PRIMARY KEY,
            filename VARCHAR(500) UNIQUE NOT NULL,
            description TEXT,
            country VARCHAR(100),
            keywords TEXT[],  -- Array of keywords
            source_url TEXT,  -- URL where metadata was found
            source_type VARCHAR(100),  -- Type of source (AFP, Shutterstock, etc.)
            original_title TEXT,  -- Original title from source
            metadata_is_ai BOOLEAN DEFAULT FALSE,  -- TRUE if generated by AI, FALSE if from real source
            filename_originator TEXT,  -- Original filename from the source
            image_url TEXT,  -- Direct URL to the image (AFP/Shutterstock only)
            exif_camera_make TEXT,  -- Camera make from EXIF
            exif_camera_model TEXT,  -- Camera model from EXIF
            exif_datetime_original TEXT,  -- Original datetime from EXIF
            exif_gps_latitude TEXT,  -- GPS latitude from EXIF
            exif_gps_longitude TEXT,  -- GPS longitude from EXIF
            exif_software TEXT,  -- Software used from EXIF
            exif_copyright TEXT,  -- Copyright info from EXIF
            processed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            status VARCHAR(50) DEFAULT 'processed'
        );
        """

        cursor.execute(create_table_query)
        conn.commit()

        # Create index on filename for faster lookups
        cursor.execute("""
        CREATE INDEX IF NOT EXISTS idx_filename ON image_metadata(filename);
        """)
        conn.commit()

        print("Table 'image_metadata' created successfully!")
        print("Database setup complete!")

        cursor.close()
        conn.close()

    except Exception as e:
        print(f"Error setting up database: {e}")
        print("Please ensure PostgreSQL is running and update the connection parameters in this script.")

if __name__ == "__main__":
    setup_database()
